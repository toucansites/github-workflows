name: Build and Deploy with Toucan

on:
  workflow_call:
    inputs:
      version:
        description: 'Toucan Docker image tag to use'
        required: false
        default: 'latest'
        type: string
      config:
        description: 'Optional environment variables as key/value map'
        required: false
        type: string

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-page:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare cache and output directories
        run: |
          mkdir -p ./cache
          chmod -R 777 ./cache
          mkdir -p ./dist
          chmod -R 777 ./dist

      - name: Resolve Docker tag
        id: docker-tag
        run: |
          VERSION_INPUT="${{ inputs.version }}"
          
          if [ -n "$VERSION_INPUT" ]; then
            if curl --silent --fail "https://registry.hub.docker.com/v2/repositories/toucansites/toucan/tags/${VERSION_INPUT}" > /dev/null; then
              echo "Toucan Docker tag '${VERSION_INPUT}' found."
              echo "tag=${VERSION_INPUT}" >> $GITHUB_OUTPUT
            else
              echo "::warning::Toucan Docker tag '${VERSION_INPUT}' not found. Falling back to 'latest'."
              echo "tag=latest" >> $GITHUB_OUTPUT
            fi
          else
            echo "No version input provided. Using 'latest'."
            echo "tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Run Toucan container and build site
        run: |
          ENV_ARGS=""

          # DO NOT PRINT config VALUES
          if [ -n "${{ inputs.config }}" ]; then
            echo "${{ inputs.config }}" | while IFS='=' read -r key value; do
              key=$(echo "$key" | xargs)   #Trim spaces
              value=$(echo "$value" | xargs)
              if [ -n "$key" ]; then
                ENV_ARGS+=" -e ${key}=${value}"
              fi
            done
          fi

          docker create \
            --mount type=bind,source=${{ github.workspace }},target=/site \
            --mount type=bind,source=${{ github.workspace }}/cache,target=/site/cache \
            -w /site \
            $ENV_ARGS \
            --name toucan-build \
            toucansites/toucan:${{ steps.docker-tag.outputs.tag }} generate \
            . \
            --target github-deploy

          docker start --attach toucan-build

      - name: Copy generated site from container to host
        run: |
          docker cp toucan-build:/tmp/output/. ./dist
          docker rm toucan-build

      - name: Upload static site to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy-page:
    needs: build-page
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4